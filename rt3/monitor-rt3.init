#!/bin/bash
#
# priority: 850
#
# Manage settings for the Zabbix installtion and 
#	other monitor-related things
#
# Stephen Soltesz <soltesz@cs.princeton.edu>
# Copyright (C) 2008 The Trustees of Princeton University
#
# $Id$
#

# Source function library and configuration
. /etc/plc.d/functions
. /etc/plc.d/monitor.functions
. /etc/planetlab/plc_config
local_config=/etc/planetlab/configs/site.xml

MONITORPATH=/usr/share/monitor

# Be verbose
set -x

# Default locations
PGDATA=/var/lib/pgsql/data
postgresql_conf=$PGDATA/postgresql.conf
pghba_conf=$PGDATA/pg_hba.conf

# Export so that we do not have to specify -p to psql invocations
export PGPORT=$PLC_DB_PORT


RT3_DB_USER="rt3user"
RT3_DB_NAME="rt3"

WROTE_PG_CONFIG=

if [ -z "$PLC_MONITOR_IP" ] ; then
	PLC_MONITOR_IP=$( gethostbyname $PLC_MONITOR_HOST )
fi


# TODO: make values re-configurable...  this may be an issue with RT's db, though.
function update_config ()
{
	pattern=$1
	with=$2
	file=$3
	sed -i -e "s/$pattern/$with/g" $file
}

function check_rt_siteconfig ()
{
	tmp_siteconfig=$(mktemp)
	tmp_initialdata=$(mktemp)
	
	# if the templates are newer than the actual config, then replace them.
	if [ $MONITORPATH/rt3/RT_SiteConfig.pm -nt /etc/rt3/RT_SiteConfig.pm ] ;
	then
		# copy templates
		cp -f $MONITORPATH/rt3/RT_SiteConfig.pm $tmp_siteconfig
		cp -f $MONITORPATH/rt3/initialdata $tmp_initialdata

		# setup RT_SiteConfig.pm
		update_config PLC_NAME "$PLC_NAME" $tmp_siteconfig
		update_config PLC_RT_HOSTNAME $PLC_RT_HOST $tmp_siteconfig

		update_config RT_DB_NAME $RT3_DB_NAME $tmp_siteconfig
		update_config RT_DB_USER $RT3_DB_USER $tmp_siteconfig
		update_config RT_DB_PASSWORD $PLC_MONITOR_DBPASSWORD $tmp_siteconfig

		# setup initialdata
		update_config PLC_RT_HOSTNAME $PLC_RT_HOST $tmp_initialdata

		# copy to live configuration
		cp -f $tmp_siteconfig /etc/rt3/RT_SiteConfig.pm 
		cp -f $tmp_initialdata /etc/rt3/initialdata 

		rm -f $tmp_siteconfig
		rm -f $tmp_initialdata
	fi
}

function check_rt_pghba ()
{
	NAME=$RT3_DB_NAME
	USER=$RT3_DB_USER
	CONF=$PGDATA/pg_hba.conf.d/${NAME}.conf
	PATTERN="host all postgres 127.0.0.1/32 trust"

	if ! grep -q "$PATTERN" $CONF ; then
		#### SETUP ACCESS from postgres user to run init for the first time.
		echo "$PATTERN" >> $CONF
	fi

}

function check_rt_aliases ()
{

	if ! grep -q "rt-mailgate --queue support" /etc/aliases ; 
	then 
		sed -i -e "s/^support.*postmaster//g" /etc/aliases
		sed -i -e "s/^security.*postmaster//g" /etc/aliases
        cat <<EOF >> /etc/aliases
# added by RT init scripts for default queues.
support: "|/usr/sbin/rt-mailgate --queue support --action correspond --url http://localhost/rt3/"
monitor: "|/usr/sbin/rt-mailgate --queue monitor --action correspond --url http://localhost/rt3/"
security: "|/usr/sbin/rt-mailgate --queue security --action correspond --url http://localhost/rt3/"
legal: "|/usr/sbin/rt-mailgate --queue legal --action correspond --url http://localhost/rt3/"
EOF
		/usr/bin/newaliases
	fi

}

function check_rt_init ()
{
	if [ ! -f /etc/rt3/setup.finished ] ; then
		/usr/sbin/rt-setup-database --action init --dba postgres
		touch /etc/rt3/setup.finished

	###Last DB adjustments
	#set defaultduein to 1 for support queue
	cat <<EOF | /usr/bin/psql -U postgres -d $RT3_DB_NAME
UPDATE queues SET defaultduein = 1 WHERE name='support'
EOF

	#alter acl for Everyone be able to create new tickets in support list
	#Everyone (groups.id == 3) on support (queues.id == 1 (based on order in initialdata))
	cat <<EOF | /usr/bin/psql -U postgres -d $RT3_DB_NAME
INSERT INTO acl (principaltype,principalid,rightname,objecttype,objectid,delegatedby,delegatedfrom) VALUES ('Group',3,'CreateTicket','RT::Queue',1,0,0);
INSERT INTO acl (principaltype,principalid,rightname,objecttype,objectid,delegatedby,delegatedfrom) VALUES ('Group',3,'ReplyToTicket','RT::Queue',1,0,0);
EOF
	#Everyone (groups.id == 3) on monitor ( queues.id == 2 (based on order in initaldata))
	cat <<EOF | /usr/bin/psql -U postgres -d $RT3_DB_NAME
INSERT INTO acl (principaltype,principalid,rightname,objecttype,objectid,delegatedby,delegatedfrom) VALUES ('Group',3,'CreateTicket','RT::Queue',2,0,0);
INSERT INTO acl (principaltype,principalid,rightname,objecttype,objectid,delegatedby,delegatedfrom) VALUES ('Group',3,'ReplyToTicket','RT::Queue',2,0,0);
EOF
	#setup custom field values
	cat <<EOF | /usr/bin/psql -U postgres -d $RT3_DB_NAME
INSERT INTO objectcustomfields (customfield, objectid, sortorder, creator, lastupdatedby) VALUES (1,1,1,12,12);
INSERT INTO customfields (name, "type", maxvalues, repeated, pattern, lookuptype, description, sortorder, creator, lastupdatedby,disabled) VALUES ('Problem Category', 'Select',1,0,'(?#Mandatory).','RT::Queue-RT::Ticket','How severe this problem is',0,12,12,0);
EOF
	cat <<EOF | /usr/bin/psql -U postgres -d $RT3_DB_NAME
INSERT INTO customfieldvalues (customfield, name, sortorder, creator, lastupdatedby) VALUES (1,'Critical',0,12,12);
INSERT INTO customfieldvalues (customfield, name, sortorder, creator, lastupdatedby) VALUES (1,'Major',1,12,12);
INSERT INTO customfieldvalues (customfield, name, sortorder, creator, lastupdatedby) VALUES (1,'Minor',2,12,12);
INSERT INTO customfieldvalues (customfield, name, sortorder, creator, lastupdatedby) VALUES (1,'Trivial',3,12,12);
EOF
	# give permissions to users to set this field.
	cat <<EOF | /usr/bin/psql -U postgres -d $RT3_DB_NAME
INSERT INTO acl (principaltype,principalid,rightname,objecttype,objectid,delegatedby,delegatedfrom) VALUES ('Group',3,'ModifyCustomField','RT::CustomField',1,0,0);
INSERT INTO acl (principaltype,principalid,rightname,objecttype,objectid,delegatedby,delegatedfrom) VALUES ('Group',3,'SeeCustomField','RT::CustomField',1,0,0);
EOF
	fi

}

if [ "$PLC_RT_ENABLED" != "1" ] ; then
    exit 0
fi

case "$1" in
	start)
		MESSAGE=$"Bootstrap RT (please wait...)"
		dialog "$MESSAGE"

		check_pg_hba $RT3_DB_NAME $RT3_DB_USER
		#check_user_and_db $RT3_DB_NAME $RT3_DB_USER
		check_rt_siteconfig
		check_rt_pghba
		if [ -n "$WROTE_PG_CONFIG" ] ; then
			# NOTE: restart db to enable access by users granted above.
			service plc restart postgresql
			MESSAGE=$"Bootstrap RT 2 (please wait...)"
			dialog "$MESSAGE"
		fi
		check_rt_aliases
		check_rt_init

		result "$MESSAGE"
	;;


	delete)
		MESSAGE=$"Deleting databases..."
		dialog "$MESSAGE"

		service plc stop httpd

		dropdb -U postgres $RT3_DB_NAME
		dropuser -U postgres $RT3_DB_USER
		rm -f /etc/rt3/RT_SiteConfig.pm
		rm -f /etc/rt3/initialdata
		PATTERN="host all postgres 127.0.0.1/32 trust"
		sed -i -e "s|$PATTERN||g" $PGDATA/pg_hba.conf.d/${RT3_DB_NAME}.conf

		sed -i -e "s/.*mailgate.*//g" /etc/aliases
		rm -f /etc/rt3/setup.finished

		result "$MESSAGE"
	;;

	stop)
		MESSAGE=$"Stopping RT"
		dialog "$MESSAGE"

		# TODO: is there anything to stop?

		result "$MESSAGE"
	;;
esac

exit $ERRORS
