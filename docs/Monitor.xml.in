<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
"@DOCBOOK-43@" [
<!ENTITY Methods SYSTEM "Methods.xml">
]>

<book>
  <bookinfo>
    <title>PlanetLab Administrative-Monitor API Documentation</title>
  </bookinfo>

  <chapter id="Introduction">
    <title>Introduction</title>

    <para>The PlanetLab Administrative-Monitor API (Admin-Mon) is the interface through
    which PLC administrators access the Admin-Mon API.  Some functions are
	also accessible to users with lower privileges. But, all users must have an account 
	in the monitored PLC </para>

    <section id="Authentication">
      <title>Authentication</title>

	  <para>Authentication for operations is based on the identity of the
	  connecting user. The standard PLCAPI authetication is used here.</para>

   </section>
    <section id="Connection">
      <title>Connection</title>

	  <para>The Admin-Mon XMLRPC server listens at http://PLC_MONITOR_HOST:8082/XMLRPC/</para>
	  <para>The XMLRPC server can be accessed remotely using a standard Python XMLRPC shell.</para>
   </section>
    <section id="Example">
      <title>An Example using the PLC and Admin-Mon API</title>

	<para>Access to the API is via standard XMLRPC.  A simple example is below.</para>

      <programlisting>
import xmlrpclib
auth = {'Username'   : API_AUTH_USER,
        'AuthMethod' : 'password',
        'AuthString' : API_AUTH_PASSWORD}
api  =  xmlrpclib.Server(API_SERVER, verbose=False, allow_none=True)

if api.upAndRunning():
    for i in api.getSiteStatus(auth):
    	print i
else:
    print "Admin-Mon API is not running."
      </programlisting>

   </section>

  </chapter>

  <chapter id="Methods">
    <title>PlanetLab API Methods</title>
    <para></para>

    &Methods;
  </chapter>

</book>

<!-- LocalWords:  PlanetLab API PLCAPI RPC HTTPS listMethods methodSignature
-->
<!-- LocalWords:  methodHelp multicall AuthMethod GetSession GnuPG Username GPG
-->
<!-- LocalWords:  AuthString AddPersonKey AddPeer UpdatePeer gpg
-->
